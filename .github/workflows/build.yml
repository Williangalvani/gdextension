name: üõ†Ô∏è Builds
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
#           - identifier: linux-debug
#             name: Linux Debug
#             runner: ubuntu-20.04
#             target: template_debug
#             platform: linux
#             arch: x86_64
          - identifier: linux-release-x86
            name: Linux Release
            runner: ubuntu-20.04
            target: template_release
            platform: linux
            arch: x86_64
          - identifier: linux-release-arm
            name: Linux Release
            runner: ubuntu-20.04
            target: template_release
            platform: linux
            arch: arm32
#           - identifier: windows-debug
#             name: Windows Debug
#             runner: ubuntu-20.04
#             target: template_debug
#             platform: windows
#             arch: x86_64
          - identifier: windows-release
            name: Windows Release
            runner: ubuntu-20.04
            target: template_release
            platform: windows
            arch: x86_64
#           - identifier: android-release
#             name: Android Release
#             runner: ubuntu-20.04
#             target: template_release
#             platform: android
#             arch: arm64
          - identifier: macos-release
            name: MacOS Release
            runner: macos-latest
            target: template_release
            platform: macos
            arch: arm64
#           - identifier: macos-debug
#             name: MacOS Debug
#             runner: macos-latest
#             target: template_release
#             platform: macos
#             arch: arm64

    steps:
      - name: (Windows) Install mingw64
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        shell: sh
        run: |
          sudo apt-get install mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: (MacOS) Install gstreamer
        if: ${{ startsWith(matrix.identifier, 'macos-') }}
        shell: sh
        run: |
          brew install --overwrite gstreamer gst-plugins-base gst-plugins-good gst-plugins-bad gst-plugins-ugly

      - name: (Linux) Install gstreamer
        if: ${{ startsWith(matrix.identifier, 'linux-') }}
        shell: sh
        run: |
          sudo apt-get install -y msitools libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

      - name: (Android) Set up Java 11
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: (Android) Set up Android SDK
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        uses: android-actions/setup-android@v2

      - name: (Android) Install Android Tools
        if: ${{ startsWith(matrix.identifier, 'android-') }}
        shell: sh
        run: |
          "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platform-tools" "build-tools;30.0.3" "platforms;android-29" "cmdline-tools;latest" "cmake;3.10.2.4988404" "ndk;21.4.7075529"

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Set up SCons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          scons --version

      - name: Checkout project
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: (Windows) Install GStreamer SDK
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        run: |
          sudo apt-get install -y msitools
          curl -L -o gstreamer-runtime.msi https://gstreamer.freedesktop.org/data/pkg/windows/1.18.4/mingw/gstreamer-1.0-mingw-x86_64-1.18.4.msi
          curl -L -o gstreamer-devel.msi https://gstreamer.freedesktop.org/data/pkg/windows/1.18.4/mingw/gstreamer-1.0-devel-mingw-x86_64-1.18.4.msi
          mkdir gstreamer-sdk
          /usr/bin/msiextract gstreamer-runtime.msi -C gstreamer-sdk/
          /usr/bin/msiextract gstreamer-devel.msi -C gstreamer-sdk/
          export PKG_CONFIG_PATH=${GITHUB_WORKSPACE}/gstreamer-sdk/gstreamer/1.0/mingw_x86_64/lib/pkgconfig/:${PKG_CONFIG_PATH}
        
      - name: Compile extension
        shell: sh
        run: |
          export PKG_CONFIG_PATH=${{ startsWith(matrix.identifier, 'windows-') && format('{0}/gstreamer-sdk/gstreamer/1.0/mingw_x86_64/lib/pkgconfig/', github.workspace) || '' }}
          echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}' -j2
          ls -l project/addons/*/bin/

      - name: Copy extra files to addon
        shell: sh
        run: |
          for addon in ${{ github.workspace }}/project/addons/*/; do
            cp -n '${{ github.workspace }}/README.md' '${{ github.workspace }}/LICENSE' "$addon"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}
          path: |
            ${{ github.workspace }}/project/
